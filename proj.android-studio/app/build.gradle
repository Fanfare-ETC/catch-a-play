apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId 'edu.cmu.etc.fanfare.playbook'
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 3
        versionName '1.0.2'

        externalNativeBuild {
            ndkBuild {
                arguments '-j' + Runtime.runtime.availableProcessors()
                cppFlags '-frtti',
                        '-DCC_ENABLE_CHIPMUNK_INTEGRATION=1',
                        '-std=c++11',
                        '-fsigned-char'
            }
        }

        ndk {
            abiFilters 'x86', 'armeabi'
        }
    }

    sourceSets.main {
        java.srcDir 'src'
        res.srcDir 'res'
        jniLibs.srcDir 'libs'
        manifest.srcFile 'AndroidManifest.xml'
        assets.srcDir 'assets'
    }

    signingConfigs {
       release {
            if (project.hasProperty('RELEASE_STORE_FILE')) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            externalNativeBuild {
                ndkBuild {
                    cppFlags '-DCOCOS2D_DEBUG=1',
                        '-DPLAYBOOK_API_HOST=10.0.2.2',
                        '-DPLAYBOOK_API_PORT=8080'
                }
            }
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty('RELEASE_STORE_FILE')) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    cppFlags '-DNDEBUG',
                        '-DPLAYBOOK_API_HOST=128.2.236.85',
                        '-DPLAYBOOK_API_PORT=80'
                }
            }

            ndk {
                abiFilters 'x86', 'armeabi'
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcocos2dx')
    compile 'com.android.support:support-v4:25.2.0'
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.google.android.gms:play-services-auth:9.6.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.2.0'
    compile 'com.koushikdutta.async:androidasync:2.+'
}

task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from '../../Resources'
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets

apply plugin: 'com.google.gms.google-services'
